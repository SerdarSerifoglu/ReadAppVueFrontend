{"remainingRequest":"/Users/omerserdarserifoglu/Desktop/reader-app-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/omerserdarserifoglu/Desktop/reader-app-frontend/src/views/Reader.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/omerserdarserifoglu/Desktop/reader-app-frontend/src/views/Reader.vue","mtime":1604174879450},{"path":"/Users/omerserdarserifoglu/Desktop/reader-app-frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/omerserdarserifoglu/Desktop/reader-app-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/omerserdarserifoglu/Desktop/reader-app-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/omerserdarserifoglu/Desktop/reader-app-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/omerserdarserifoglu/Desktop/reader-app-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci50b29sdGlwUyB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBjb2xvcjogcmVkOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Ci50b29sdGlwUyAudG9vbHRpcHRleHQgewogIHZpc2liaWxpdHk6IGhpZGRlbjsKICB3aWR0aDogYXV0bzsKICBtYXgtd2lkdGg6IDMwMHB4OwogIGJhY2tncm91bmQtY29sb3I6IGJsYWNrOwogIGNvbG9yOiAjZmZmOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBib3JkZXItcmFkaXVzOiA2cHg7CiAgcGFkZGluZzogNXB4OwogIG9wYWNpdHk6IDAuODsKCiAgLyogUG9zaXRpb24gdGhlIHRvb2x0aXAgKi8KICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgei1pbmRleDogMTsKICB0b3A6IC0yNXB4OwogIGxlZnQ6IDEwNSU7Cn0KCi50b29sdGlwUzpob3ZlciAudG9vbHRpcHRleHQgewogIHZpc2liaWxpdHk6IHZpc2libGU7Cn0Kc3BhbiB7CiAgd2hpdGUtc3BhY2U6IHByZS13cmFwOwp9Ci5hcnRpY2xlQm9hcmQgewogIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrOwogIGJvcmRlci1yYWRpdXM6IDAuMnJlbTsKICBtYXJnaW46IDFyZW07CiAgcGFkZGluZzogMC41cmVtOwp9Cg=="},{"version":3,"sources":["Reader.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Reader.vue","sourceRoot":"src/views","sourcesContent":["<style>\n  .tooltipS {\n    position: relative;\n    display: inline-block;\n    color: red;\n    font-weight: bold;\n  }\n  .tooltipS .tooltiptext {\n    visibility: hidden;\n    width: auto;\n    max-width: 300px;\n    background-color: black;\n    color: #fff;\n    text-align: center;\n    border-radius: 6px;\n    padding: 5px;\n    opacity: 0.8;\n\n    /* Position the tooltip */\n    position: absolute;\n    z-index: 1;\n    top: -25px;\n    left: 105%;\n  }\n\n  .tooltipS:hover .tooltiptext {\n    visibility: visible;\n  }\n  span {\n    white-space: pre-wrap;\n  }\n  .articleBoard {\n    border: 1px solid black;\n    border-radius: 0.2rem;\n    margin: 1rem;\n    padding: 0.5rem;\n  }\n</style>\n\n<template>\n  <div class=\"container\" style=\"margin-top:75px\">\n    <div class=\"mainView\" @mouseup=\"selectWord\">\n      <div class=\"row\">\n        <div class=\"col-sm-3\">\n          <label>Choose Pack</label>\n        </div>\n        <app-combobox classValue=\"col-sm-6\" :mainData=\"packComboboxData\" @comboboxChange=\"selectedPack = $event\" />\n\n        <div class=\"col-sm-3\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary float-right \"\n            data-toggle=\"modal\"\n            data-target=\".bd-example-modal-sm\"\n          >\n            Add Word\n          </button>\n        </div>\n      </div>\n\n      <div class=\"reader\">\n        <app-input\n          inputId=\"articleTitle\"\n          label=\"Article Title\"\n          divClass=\"col-md-12 col-xs-12\"\n          v-model=\"articleData.title\"\n          :dataValue=\"articleData.title\"\n        ></app-input>\n        <app-input\n          inputId=\"articleDescription\"\n          label=\"Article Description\"\n          divClass=\"col-md-12 col-xs-12\"\n          v-model=\"articleData.description\"\n          :dataValue=\"articleData.description\"\n        ></app-input>\n        <div class=\"form-group\">\n          <textarea\n            v-if=\"openTextArea\"\n            v-model=\"articleData.article\"\n            class=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"15\"\n            style=\"margin-top:0.5rem\"\n          ></textarea>\n        </div>\n        <button @click=\"readButtonClick\" class=\"btn btn-success btn-lg\">\n          READ\n        </button>\n        <button @click=\"clickNewArticleButton\" class=\"btn btn-primary btn-lg\" style=\"margin-left:0.5rem\">\n          CHANGE ARTICLE\n        </button>\n\n        <p class=\"articleBoard col-xs-12\" v-html=\"readArticle\" v-if=\"!openTextArea\"></p>\n      </div>\n    </div>\n    <!-- Modal -->\n\n    <div\n      class=\"modal fade bd-example-modal-sm\"\n      tabindex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"mySmallModalLabel\"\n      aria-hidden=\"true\"\n      style=\"margin:5rem\"\n    >\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div style=\"margin:5rem;\">\n            <app-input\n              inputId=\"mainWord\"\n              label=\"Main Word\"\n              divClass=\"col-md-12 col-xs-12\"\n              v-model=\"wordData.mainWord\"\n              :dataValue=\"wordData.mainWord\"\n            ></app-input>\n            <app-input\n              inputId=\"secondaryWord\"\n              label=\"Secondary Word\"\n              divClass=\"col-md-12 col-xs-12\"\n              v-model=\"wordData.secondaryWord\"\n              :dataValue=\"wordData.secondaryWord\"\n            ></app-input>\n            <button class=\"btn btn-success col-md-3 center\" @click=\"insertOrUpdateWord()\">\n              ADD\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Modal End -->\n    <p>{{ wordData }}</p>\n\n    <ArticleList @data=\"articleData = $event\"></ArticleList>\n  </div>\n</template>\n\n<script>\n  import axios from 'axios';\n  import Combobox from '../components/Combobox.vue';\n  import Input from '../components/Input.vue';\n  import ArticleList from '../components/ArticleList.vue';\n  export default {\n    data() {\n      return {\n        selectData: '',\n        selectedPack: '',\n        packComboboxData: [],\n        words: [],\n        article: '',\n        readArticle: '',\n        openTextArea: true,\n        clickedReadButton: false,\n        wordData: {\n          mainWord: '',\n          secondaryWord: '',\n        },\n        articleData: {\n          title: '',\n          description: '',\n          article: '',\n        },\n      };\n    },\n    name: 'Edit',\n    components: {\n      'app-combobox': Combobox,\n      'app-input': Input,\n      ArticleList,\n    },\n    methods: {\n      async selectWord() {\n        this.selectData = window.getSelection().toString();\n        if (this.selectData == '') {\n          return;\n        }\n        this.wordData = {};\n        this.wordData.mainWord = this.selectData;\n\n        await axios\n          .get('http://localhost:5000/api/pack/' + this.selectedPack + '/word/' + this.selectData, {\n            headers: {\n              Authorization: `Bearer: ${this.$store.state.token}`,\n            },\n          })\n          .then((response) => {\n            console.log(response.data.data[0]);\n            if (response.data.data[0] != undefined) {\n              this.wordData = response.data.data[0];\n            }\n          })\n          .catch((e) => console.log(e));\n      },\n      readButtonClick: async function() {\n        if (this.selectedPack == '') {\n          alert('Please select pack to read');\n          return;\n        }\n        if (this.clickedReadButton) return;\n\n        this.clickedReadButton = true;\n        this.openTextArea = false;\n\n        await axios\n          .get('http://localhost:5000/api/pack/' + this.selectedPack + '/words', {\n            headers: {\n              Authorization: `Bearer: ${this.$store.state.token}`,\n            },\n          })\n          .then((response) => {\n            this.words = response.data.data[0].words;\n\n            this.words.sort(function(a, b) {\n              return b.mainWord.length - a.mainWord.length;\n            });\n            console.log(this.words);\n            this.readArticle = this.articleData.article;\n            this.words.forEach((element) => {\n              var regx = new RegExp('(\\\\b' + element.mainWord + '\\\\b)(?!^>)(?![^<>]*<*>)', 'gi');\n              console.log(regx);\n              this.readArticle = this.readArticle.replace(\n                regx,\n                `<span class=\"tooltipS\">${element.mainWord}<span class=\"tooltiptext\">${element.secondaryWord}</span></span>`\n              );\n            });\n          })\n          .catch((e) => console.log(e));\n      },\n      clickNewArticleButton() {\n        this.clickedReadButton = false;\n        this.openTextArea = true;\n      },\n      readToken() {\n        this.tokenNow = this.$store.state.token;\n      },\n      insertOrUpdateWord: async function() {\n        //işlem uygulanıcak data varsa update yoksa add\n        if (this.wordData._id === undefined) {\n          await axios\n            .post(\n              'http://localhost:5000/api/pack/' + this.selectedPack + '/word',\n              { ...this.wordData },\n              {\n                headers: {\n                  Authorization: `Bearer: ${this.$store.state.token}`,\n                },\n              }\n            )\n            .then((response) => {\n              console.log(response);\n              alert('Word added');\n            })\n            .catch((e) => console.log(e));\n        } else {\n          await axios\n            .put(\n              'http://localhost:5000/api/pack/' + this.selectedPack + '/word',\n              { ...this.wordData },\n              {\n                headers: {\n                  Authorization: `Bearer: ${this.$store.state.token}`,\n                },\n              }\n            )\n            .then((response) => {\n              console.log(response);\n              alert('Word updated');\n            })\n            .catch((e) => console.log(e));\n        }\n        this.wordData = {};\n      },\n    },\n    async created() {\n      console.log('Created Reader: ' + this.$store.state.token);\n      await axios\n        .get('http://localhost:5000/api/pack/forCbx', {\n          headers: {\n            Authorization: `Bearer: ${this.$store.state.token}`,\n          },\n        })\n        .then((response) => {\n          this.packComboboxData = response.data.data;\n        })\n        .catch((e) => {\n          console.log(e.status, e.message);\n          this.$store.dispatch('clearToken');\n        });\n    },\n    watch: {\n      articleData() {\n        this.clickedReadButton = false;\n        this.openTextArea = true;\n      },\n    },\n  };\n</script>\n"]}]}