{"remainingRequest":"/Users/omerserdarserifoglu/Desktop/reader-app-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/omerserdarserifoglu/Desktop/reader-app-frontend/src/views/Reader.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/omerserdarserifoglu/Desktop/reader-app-frontend/src/views/Reader.vue","mtime":1612638976424},{"path":"/Users/omerserdarserifoglu/Desktop/reader-app-frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/omerserdarserifoglu/Desktop/reader-app-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/omerserdarserifoglu/Desktop/reader-app-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/omerserdarserifoglu/Desktop/reader-app-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/omerserdarserifoglu/Desktop/reader-app-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmEgewogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKfQphOmhvdmVyIHsKICBjb2xvcjogcmVkOwp9Ci50b29sdGlwUyB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBjb2xvcjogcmVkOwogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Ci50b29sdGlwUyAudG9vbHRpcHRleHQgewogIHZpc2liaWxpdHk6IGhpZGRlbjsKICB3aWR0aDogYXV0bzsKICBtYXgtd2lkdGg6IDMwMHB4OwogIGJhY2tncm91bmQtY29sb3I6IGJsYWNrOwogIGNvbG9yOiAjZmZmOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBib3JkZXItcmFkaXVzOiA2cHg7CiAgcGFkZGluZzogNXB4OwogIG9wYWNpdHk6IDAuODsKCiAgLyogUG9zaXRpb24gdGhlIHRvb2x0aXAgKi8KICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgei1pbmRleDogMTsKICB0b3A6IC00MHB4OwogIGxlZnQ6IDExMCU7Cn0KCi50b29sdGlwUzpob3ZlciAudG9vbHRpcHRleHQgewogIHZpc2liaWxpdHk6IHZpc2libGU7Cn0KLnRvb2x0aXBTOmZvY3VzIC50b29sdGlwdGV4dCB7CiAgdmlzaWJpbGl0eTogdmlzaWJsZTsKfQpzcGFuIHsKICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7Cn0KLmFydGljbGVCb2FyZCB7CiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7CiAgYm9yZGVyLXJhZGl1czogMC4ycmVtOwogIG1hcmdpbjogMXJlbTsKICBwYWRkaW5nOiAwLjVyZW07Cn0K"},{"version":3,"sources":["Reader.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Reader.vue","sourceRoot":"src/views","sourcesContent":["<style>\na {\n  text-decoration: none;\n}\na:hover {\n  color: red;\n}\n.tooltipS {\n  position: relative;\n  display: inline-block;\n  color: red;\n  font-weight: bold;\n}\n.tooltipS .tooltiptext {\n  visibility: hidden;\n  width: auto;\n  max-width: 300px;\n  background-color: black;\n  color: #fff;\n  text-align: center;\n  border-radius: 6px;\n  padding: 5px;\n  opacity: 0.8;\n\n  /* Position the tooltip */\n  position: absolute;\n  z-index: 1;\n  top: -40px;\n  left: 110%;\n}\n\n.tooltipS:hover .tooltiptext {\n  visibility: visible;\n}\n.tooltipS:focus .tooltiptext {\n  visibility: visible;\n}\nspan {\n  white-space: pre-wrap;\n}\n.articleBoard {\n  border: 1px solid black;\n  border-radius: 0.2rem;\n  margin: 1rem;\n  padding: 0.5rem;\n}\n</style>\n\n<template>\n  <div class=\"container\" style=\"margin-top: 75px\">\n    <div class=\"mainView\" @mouseup=\"selectWord\">\n      <div class=\"row\">\n        <div class=\"col-sm-3\">\n          <label>Choose Pack</label>\n        </div>\n        <app-combobox\n          classValue=\"col-sm-6\"\n          :mainData=\"packComboboxData\"\n          @comboboxChange=\"selectedPack = $event\"\n          :currentValue=\"comboboxCurrentValue\"\n        />\n\n        <div class=\"col-sm-3\">\n          <button\n            type=\"button\"\n            class=\"btn btn-primary float-right\"\n            @click=\"addWordButtonClick()\"\n          >\n            Add Word\n          </button>\n        </div>\n      </div>\n\n      <div class=\"reader\">\n        <app-input\n          @input=\"$v.articleData.title.$touch()\"\n          :inputClass=\"{\n            'form-control': true,\n            'is-invalid': $v.articleData.title.$error,\n          }\"\n          inputId=\"articleTitle\"\n          label=\"Article Title\"\n          divClass=\"col-md-12 col-xs-12\"\n          v-model=\"articleData.title\"\n          :dataValue=\"articleData.title\"\n          :attention1=\"$v.articleData.title.required\"\n          attention1Text=\"Title is required !\"\n        ></app-input>\n        <app-input\n          @input=\"$v.articleData.description.$touch()\"\n          :inputClass=\"{\n            'form-control': true,\n            'is-invalid': $v.articleData.description.$error,\n          }\"\n          inputId=\"articleDescription\"\n          label=\"Article Description\"\n          divClass=\"col-md-12 col-xs-12\"\n          v-model=\"articleData.description\"\n          :dataValue=\"articleData.description\"\n          :attention1=\"$v.articleData.description.required\"\n          attention1Text=\"Description is required !\"\n        ></app-input>\n        <div class=\"form-group\">\n          <textarea\n            v-if=\"openTextArea\"\n            v-model=\"articleData.article\"\n            @input=\"$v.articleData.article.$touch()\"\n            :class=\"{\n              'form-control': true,\n              'is-invalid': $v.articleData.article.$error,\n            }\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"15\"\n            style=\"margin-top: 0.5rem\"\n          ></textarea>\n          <small class=\"text-danger\" v-if=\"!$v.articleData.article.required\"\n            >Article is required !</small\n          >\n        </div>\n        <button\n          @click=\"readButtonClick\"\n          class=\"btn btn-success btn-lg\"\n          :disabled=\"!$v.selectedPack.required\"\n        >\n          READ\n        </button>\n        <button\n          @click=\"clickNewArticleButton\"\n          class=\"btn btn-primary btn-lg\"\n          style=\"margin-left: 0.5rem\"\n        >\n          CHANGE ARTICLE\n        </button>\n        <button\n          @click=\"saveArticle\"\n          class=\"btn btn-warning btn-lg\"\n          style=\"margin-left: 0.5rem\"\n          :disabled=\"$v.articleData.$invalid\"\n        >\n          SAVE ARTICLE\n        </button>\n\n        <p\n          class=\"articleBoard col-xs-12\"\n          v-html=\"readArticle\"\n          v-if=\"!openTextArea\"\n        ></p>\n      </div>\n    </div>\n\n    <!-- Modal -->\n    <div\n      class=\"modal fade bd-example-modal-sm\"\n      tabindex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"mySmallModalLabel\"\n      aria-hidden=\"true\"\n      v-bind:class=\"{\n        show: modalDisplay,\n      }\"\n      v-bind:style=\"{\n        display: modalDisplayValue,\n      }\"\n    >\n      <div class=\"modal-dialog\" id=\"addWordModal\">\n        <div class=\"modal-content\">\n          <div style=\"margin: 2rem\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Save Word</h5>\n              <button\n                type=\"button\"\n                @click=\"modalClick()\"\n                style=\"\n                  border: 0;\n                  padding: 3px;\n                  background-color: #fff;\n                  cursor: pointer;\n                \"\n              >\n                <span>X</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <app-input\n                @input=\"$v.wordData.mainWord.$touch()\"\n                :inputClass=\"{\n                  'form-control': true,\n                  'is-invalid': $v.wordData.mainWord.$error,\n                }\"\n                inputId=\"mainWord\"\n                label=\"Main Word\"\n                divClass=\"col-md-12 col-xs-12\"\n                v-model=\"wordData.mainWord\"\n                :dataValue=\"wordData.mainWord\"\n                :attention1=\"$v.wordData.mainWord.required\"\n                attention1Text=\"Main word is required !\"\n              ></app-input>\n              <app-input\n                @input=\"$v.wordData.secondaryWord.$touch()\"\n                :inputClass=\"{\n                  'form-control': true,\n                  'is-invalid': $v.wordData.secondaryWord.$error,\n                }\"\n                inputId=\"secondaryWord\"\n                label=\"Secondary Word\"\n                divClass=\"col-md-12 col-xs-12\"\n                v-model=\"wordData.secondaryWord\"\n                :dataValue=\"wordData.secondaryWord\"\n                :attention1=\"$v.wordData.secondaryWord.required\"\n                attention1Text=\"Secondary word is required !\"\n              ></app-input>\n            </div>\n            <div class=\"modal-footer\">\n              <button\n                class=\"btn btn-success center\"\n                @click=\"insertOrUpdateWord()\"\n                :disabled=\"$v.wordData.$invalid\"\n              >\n                <i class=\"far fa-save\" style=\"margin-right: 3px\"></i> SAVE\n              </button>\n              <button class=\"btn btn-danger center\" @click=\"modalClick()\">\n                <i class=\"far fa-window-close\" style=\"margin-right: 3px\"></i>\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- Modal End -->\n    <p>{{ wordData }}</p>\n\n    <ArticleList @data=\"articleData = $event\"></ArticleList>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { required } from \"vuelidate/lib/validators\";\nimport Combobox from \"../components/Combobox.vue\";\nimport Input from \"../components/Input.vue\";\nimport ArticleList from \"../components/ArticleList.vue\";\n\nexport default {\n  data() {\n    return {\n      comboboxCurrentValue: this.$store.getters.getUserSettings.selectedPackId,\n      userSettingColor: this.$store.getters.getUserSettings.color ?? \"FF2D00\",\n      modalDisplayValue: \"none\",\n      modalDisplay: false,\n      selectData: \"\",\n      selectedPack: \"\",\n      packComboboxData: [],\n      words: [],\n      article: \"\",\n      readArticle: \"\",\n      openTextArea: true,\n      clickedReadButton: false,\n      wordData: {\n        mainWord: \"\",\n        secondaryWord: \"\",\n      },\n      articleData: {\n        title: \"\",\n        description: \"\",\n        article: \"\",\n      },\n    };\n  },\n  validations: {\n    articleData: {\n      title: { required },\n      description: { required },\n      article: { required },\n    },\n    wordData: {\n      mainWord: { required },\n      secondaryWord: { required },\n    },\n    selectedPack: {\n      required,\n    },\n  },\n  name: \"Edit\",\n  components: {\n    \"app-combobox\": Combobox,\n    \"app-input\": Input,\n    ArticleList,\n  },\n  methods: {\n    async selectWord() {\n      this.selectData = window.getSelection().toString();\n      if (this.selectData == \"\") {\n        return;\n      }\n      this.wordData = {};\n      this.wordData.mainWord = this.selectData;\n\n      await axios\n        .get(\"/pack/\" + this.selectedPack + \"/word/\" + this.selectData)\n        .then((response) => {\n          console.log(response.data.data[0]);\n          if (response.data.data[0] != undefined) {\n            this.wordData = response.data.data[0];\n          }\n        })\n        .catch((e) => console.log(e));\n    },\n    readButtonClick: async function () {\n      if (this.selectedPack == \"\") {\n        alert(\"Please select pack to read\");\n        return;\n      }\n      if (this.clickedReadButton) return;\n\n      this.clickedReadButton = true;\n      this.openTextArea = false;\n\n      await axios\n        .get(\"/pack/\" + this.selectedPack + \"/words\")\n        .then((response) => {\n          this.words = response.data.data[0].words;\n\n          this.words.sort(function (a, b) {\n            return b.mainWord.length - a.mainWord.length;\n          });\n          console.log(this.words);\n          this.readArticle = this.articleData.article;\n          this.words.forEach((element) => {\n            var regx = new RegExp(\n              \"(\\\\b\" + element.mainWord + \"\\\\b)(?!^>)(?![^<>]*<*>)\",\n              \"gi\"\n            );\n            console.log(regx);\n            this.readArticle = this.readArticle.replace(\n              regx,\n              `<a href=\"#\" class=\"tooltipS\" style=\"color:#${this.userSettingColor}\">${element.mainWord}<span class=\"tooltiptext\">${element.secondaryWord}</span></a>`\n            );\n          });\n        })\n        .catch((e) => console.log(e));\n    },\n    clickNewArticleButton() {\n      this.clickedReadButton = false;\n      this.openTextArea = true;\n    },\n    readToken() {\n      this.tokenNow = this.$store.state.token;\n    },\n    insertOrUpdateWord: async function () {\n      //işlem uygulanıcak data varsa update yoksa add\n      if (this.wordData._id === undefined) {\n        await axios\n          .post(\"/pack/\" + this.selectedPack + \"/word\", { ...this.wordData })\n          .then((response) => {\n            console.log(response);\n            alert(\"Word added\");\n          })\n          .catch((e) => console.log(e));\n      } else {\n        await axios\n          .put(\"/pack/\" + this.selectedPack + \"/word\", { ...this.wordData })\n          .then((response) => {\n            console.log(response);\n            alert(\"Word updated\");\n          })\n          .catch((e) => console.log(e));\n      }\n      this.wordData = {};\n    },\n    saveArticle: async function () {\n      if (this.articleData.title === \"\") {\n        return;\n      }\n      var articleModel = {};\n      await axios\n        .get(\"/article/title/\" + this.articleData.title)\n        .then((response) => {\n          if (response.data.data != []) {\n            articleModel = response.data.data[0];\n          }\n        })\n        .catch((e) => console.log(e));\n      console.log(articleModel);\n      if (articleModel === undefined) {\n        await axios\n          .post(\"/article/add/\", { ...this.articleData })\n          .then((response) => {\n            console.log(response);\n            alert(\"Article added\");\n          })\n          .catch((e) => console.log(e));\n      } else {\n        articleModel = { ...articleModel, ...this.articleData };\n        await axios\n          .put(\"/article/add/\", { ...articleModel })\n          .then((response) => {\n            console.log(response);\n            alert(\"Article saved\");\n          })\n          .catch((e) => console.log(e));\n      }\n    },\n    modalClick: function () {\n      this.modalDisplay = !this.modalDisplay;\n      if (this.modalDisplay) {\n        this.modalDisplayValue = \"block\";\n      } else {\n        this.modalDisplayValue = \"none\";\n      }\n    },\n    async addWordButtonClick() {\n      this.modalClick();\n    },\n  },\n  async created() {\n    this.comboboxCurrentValue = this.$store.getters.getUserSettings.selectedPackId;\n    if (this.selectedPack === \"\") {\n      this.selectedPack = this.comboboxCurrentValue;\n    }\n    axios.defaults.baseURL = process.env.VUE_APP_BASE_PATH;\n    axios.defaults.headers.common[\n      \"Authorization\"\n    ] = `Bearer: ${this.$store.state.token}`;\n    await axios\n      .get(\"/pack/forCbx\")\n      .then((response) => {\n        console.log(\"reserponse Serdar\");\n        this.packComboboxData = response.data.data;\n      })\n      .catch((e) => {\n        console.log(\"serdar catch\");\n        if (e.response.status == 401) {\n          var ss = \"\";\n        }\n        this.$store.dispatch(\"clearToken\");\n      });\n    this.$store.dispatch(\"setUserSettings\");\n  },\n  watch: {\n    articleData() {\n      this.clickedReadButton = false;\n      this.openTextArea = true;\n    },\n  },\n};\n</script>\n"]}]}